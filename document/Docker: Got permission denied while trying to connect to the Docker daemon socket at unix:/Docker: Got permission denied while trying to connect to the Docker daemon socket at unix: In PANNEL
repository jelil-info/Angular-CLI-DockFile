oyekanmi@Oyekanmi-Oyetunji:~/Documents/Angular/ProAngular9/ngServe$ docker build . -t sportsstore  -f  Dockerfile
[+] Building 0.0s (0/0)                                                         
ERROR: invalid tag "sportsstore\u00a0\u00a0-f\u00a0\u00a0Dockerfile": invalid reference format
oyekanmi@Oyekanmi-Oyetunji:~/Documents/Angular/ProAngular9/ngServe$ docker run -p 80:80 -p 443:443 sportsstore
Unable to find image 'sportsstore:latest' locally
docker: Error response from daemon: pull access denied for sportsstore, repository does not exist or may require 'docker login': denied: requested access to the resource is denied.
See 'docker run --help'.
oyekanmi@Oyekanmi-Oyetunji:~/Documents/Angular/ProAngular9/ngServe$ docker run --help

Usage:  docker run [OPTIONS] IMAGE [COMMAND] [ARG...]

Create and run a new container from an image

Aliases:
  docker container run, docker run

Options:
      --add-host list                  Add a custom host-to-IP mapping
                                       (host:ip)
  -a, --attach list                    Attach to STDIN, STDOUT or STDERR
      --blkio-weight uint16            Block IO (relative weight),
                                       between 10 and 1000, or 0 to
                                       disable (default 0)
      --blkio-weight-device list       Block IO weight (relative device
                                       weight) (default [])
      --cap-add list                   Add Linux capabilities
      --cap-drop list                  Drop Linux capabilities
      --cgroup-parent string           Optional parent cgroup for the
                                       container
      --cgroupns string                Cgroup namespace to use
                                       (host|private)
                                       'host':    Run the container in
                                       the Docker host's cgroup namespace
                                       'private': Run the container in
                                       its own private cgroup namespace
                                       '':        Use the cgroup
                                       namespace as configured by the
                                                  default-cgroupns-mode
                                       option on the daemon (default)
      --cidfile string                 Write the container ID to the file
      --cpu-period int                 Limit CPU CFS (Completely Fair
                                       Scheduler) period
      --cpu-quota int                  Limit CPU CFS (Completely Fair
                                       Scheduler) quota
      --cpu-rt-period int              Limit CPU real-time period in
                                       microseconds
      --cpu-rt-runtime int             Limit CPU real-time runtime in
                                       microseconds
  -c, --cpu-shares int                 CPU shares (relative weight)
      --cpus decimal                   Number of CPUs
      --cpuset-cpus string             CPUs in which to allow execution
                                       (0-3, 0,1)
      --cpuset-mems string             MEMs in which to allow execution
                                       (0-3, 0,1)
  -d, --detach                         Run container in background and
                                       print container ID
      --detach-keys string             Override the key sequence for
                                       detaching a container
      --device list                    Add a host device to the container
      --device-cgroup-rule list        Add a rule to the cgroup allowed
                                       devices list
      --device-read-bps list           Limit read rate (bytes per second)
                                       from a device (default [])
      --device-read-iops list          Limit read rate (IO per second)
                                       from a device (default [])
      --device-write-bps list          Limit write rate (bytes per
                                       second) to a device (default [])
      --device-write-iops list         Limit write rate (IO per second)
                                       to a device (default [])
      --disable-content-trust          Skip image verification (default true)
      --dns list                       Set custom DNS servers
      --dns-option list                Set DNS options
      --dns-search list                Set custom DNS search domains
      --domainname string              Container NIS domain name
      --entrypoint string              Overwrite the default ENTRYPOINT
                                       of the image
  -e, --env list                       Set environment variables
      --env-file list                  Read in a file of environment variables
      --expose list                    Expose a port or a range of ports
      --gpus gpu-request               GPU devices to add to the
                                       container ('all' to pass all GPUs)
      --group-add list                 Add additional groups to join
      --health-cmd string              Command to run to check health
      --health-interval duration       Time between running the check
                                       (ms|s|m|h) (default 0s)
      --health-retries int             Consecutive failures needed to
                                       report unhealthy
      --health-start-period duration   Start period for the container to
                                       initialize before starting
                                       health-retries countdown
                                       (ms|s|m|h) (default 0s)
      --health-timeout duration        Maximum time to allow one check to
                                       run (ms|s|m|h) (default 0s)
      --help                           Print usage
  -h, --hostname string                Container host name
      --init                           Run an init inside the container
                                       that forwards signals and reaps
                                       processes
  -i, --interactive                    Keep STDIN open even if not attached
      --ip string                      IPv4 address (e.g., 172.30.100.104)
      --ip6 string                     IPv6 address (e.g., 2001:db8::33)
      --ipc string                     IPC mode to use
      --isolation string               Container isolation technology
      --kernel-memory bytes            Kernel memory limit
  -l, --label list                     Set meta data on a container
      --label-file list                Read in a line delimited file of labels
      --link list                      Add link to another container
      --link-local-ip list             Container IPv4/IPv6 link-local
                                       addresses
      --log-driver string              Logging driver for the container
      --log-opt list                   Log driver options
      --mac-address string             Container MAC address (e.g.,
                                       92:d0:c6:0a:29:33)
  -m, --memory bytes                   Memory limit
      --memory-reservation bytes       Memory soft limit
      --memory-swap bytes              Swap limit equal to memory plus
                                       swap: '-1' to enable unlimited swap
      --memory-swappiness int          Tune container memory swappiness
                                       (0 to 100) (default -1)
      --mount mount                    Attach a filesystem mount to the
                                       container
      --name string                    Assign a name to the container
      --network network                Connect a container to a network
      --network-alias list             Add network-scoped alias for the
                                       container
      --no-healthcheck                 Disable any container-specified
                                       HEALTHCHECK
      --oom-kill-disable               Disable OOM Killer
      --oom-score-adj int              Tune host's OOM preferences (-1000
                                       to 1000)
      --pid string                     PID namespace to use
      --pids-limit int                 Tune container pids limit (set -1
                                       for unlimited)
      --platform string                Set platform if server is
                                       multi-platform capable
      --privileged                     Give extended privileges to this
                                       container
  -p, --publish list                   Publish a container's port(s) to
                                       the host
  -P, --publish-all                    Publish all exposed ports to
                                       random ports
      --pull string                    Pull image before running
                                       ("always", "missing", "never")
                                       (default "missing")
  -q, --quiet                          Suppress the pull output
      --read-only                      Mount the container's root
                                       filesystem as read only
      --restart string                 Restart policy to apply when a
                                       container exits (default "no")
      --rm                             Automatically remove the container
                                       when it exits
      --runtime string                 Runtime to use for this container
      --security-opt list              Security Options
      --shm-size bytes                 Size of /dev/shm
      --sig-proxy                      Proxy received signals to the
                                       process (default true)
      --stop-signal string             Signal to stop the container
      --stop-timeout int               Timeout (in seconds) to stop a
                                       container
      --storage-opt list               Storage driver options for the
                                       container
      --sysctl map                     Sysctl options (default map[])
      --tmpfs list                     Mount a tmpfs directory
  -t, --tty                            Allocate a pseudo-TTY
      --ulimit ulimit                  Ulimit options (default [])
  -u, --user string                    Username or UID (format:
                                       <name|uid>[:<group|gid>])
      --userns string                  User namespace to use
      --uts string                     UTS namespace to use
  -v, --volume list                    Bind mount a volume
      --volume-driver string           Optional volume driver for the
                                       container
      --volumes-from list              Mount volumes from the specified
                                       container(s)
  -w, --workdir string                 Working directory inside the container
oyekanmi@Oyekanmi-Oyetunji:~/Documents/Angular/ProAngular9/ngServe$ docker build . -t sportsstore  -f  Dockerfile
[+] Building 0.0s (0/0)                                                         
ERROR: invalid tag "sportsstore\u00a0\u00a0-f\u00a0\u00a0Dockerfile": invalid reference format
oyekanmi@Oyekanmi-Oyetunji:~/Documents/Angular/ProAngular9/ngServe$ docker build  -t sportsstore  -f  Dockerfile
ERROR: "docker buildx build" requires exactly 1 argument.
See 'docker buildx build --help'.

Usage:  docker buildx build [OPTIONS] PATH | URL | -

Start a build
oyekanmi@Oyekanmi-Oyetunji:~/Documents/Angular/ProAngular9/ngServe$ docker buildx build --help

Usage:  docker buildx build [OPTIONS] PATH | URL | -

Start a build

Aliases:
  docker buildx build, docker buildx b

Options:
      --add-host strings              Add a custom host-to-IP mapping
                                      (format: "host:ip")
      --allow strings                 Allow extra privileged entitlement
                                      (e.g., "network.host",
                                      "security.insecure")
      --attest stringArray            Attestation parameters (format:
                                      "type=sbom,generator=image")
      --build-arg stringArray         Set build-time variables
      --build-context stringArray     Additional build contexts (e.g.,
                                      name=path)
      --builder string                Override the configured builder instance
      --cache-from stringArray        External cache sources (e.g.,
                                      "user/app:cache",
                                      "type=local,src=path/to/dir")
      --cache-to stringArray          Cache export destinations (e.g.,
                                      "user/app:cache",
                                      "type=local,dest=path/to/dir")
      --cgroup-parent string          Optional parent cgroup for the container
  -f, --file string                   Name of the Dockerfile (default:
                                      "PATH/Dockerfile")
      --iidfile string                Write the image ID to the file
      --label stringArray             Set metadata for an image
      --load                          Shorthand for "--output=type=docker"
      --metadata-file string          Write build result metadata to the file
      --network string                Set the networking mode for the
                                      "RUN" instructions during build
                                      (default "default")
      --no-cache                      Do not use cache when building the image
      --no-cache-filter stringArray   Do not cache specified stages
  -o, --output stringArray            Output destination (format:
                                      "type=local,dest=path")
      --platform stringArray          Set target platform for build
      --progress string               Set type of progress output
                                      ("auto", "plain", "tty"). Use plain
                                      to show container output (default
                                      "auto")
      --provenance string             Shortand for "--attest=type=provenance"
      --pull                          Always attempt to pull all
                                      referenced images
      --push                          Shorthand for "--output=type=registry"
  -q, --quiet                         Suppress the build output and print
                                      image ID on success
      --sbom string                   Shorthand for "--attest=type=sbom"
      --secret stringArray            Secret to expose to the build
                                      (format:
                                      "id=mysecret[,src=/local/secret]")
      --shm-size bytes                Size of "/dev/shm"
      --ssh stringArray               SSH agent socket or keys to expose
                                      to the build (format:
                                      "default|<id>[=<socket>|<key>[,<key>]]")
  -t, --tag stringArray               Name and optionally a tag (format:
                                      "name:tag")
      --target string                 Set the target build stage to build
      --ulimit ulimit                 Ulimit options (default [])
oyekanmi@Oyekanmi-Oyetunji:~/Documents/Angular/ProAngular9/ngServe$ docker build . -t sportsstore  -f  Dockerfile^C
oyekanmi@Oyekanmi-Oyetunji:~/Documents/Angular/ProAngular9/ngServe$ docker buildx build --help^C
oyekanmi@Oyekanmi-Oyetunji:~/Documents/Angular/ProAngular9/ngServe$ ^C
oyekanmi@Oyekanmi-Oyetunji:~/Documents/Angular/ProAngular9/ngServe$ docker build -t sportsstore -f- Dockerfile
[+] Building 0.0s (0/0)                                                         
ERROR: unable to prepare context: path "Dockerfile" not found
oyekanmi@Oyekanmi-Oyetunji:~/Documents/Angular/ProAngular9/ngServe$ docker build -t sportsstore -f ./Dockerfile
ERROR: "docker buildx build" requires exactly 1 argument.
See 'docker buildx build --help'.

Usage:  docker buildx build [OPTIONS] PATH | URL | -

Start a build
oyekanmi@Oyekanmi-Oyetunji:~/Documents/Angular/ProAngular9/ngServe$ docker build . -t sportsstore  -f  Dockerfile
[+] Building 0.0s (0/0)                                                         
ERROR: invalid tag "sportsstore\u00a0\u00a0-f\u00a0\u00a0Dockerfile": invalid reference format
oyekanmi@Oyekanmi-Oyetunji:~/Documents/Angular/ProAngular9/ngServe$ docker build . -t sportsstore -f Dockerfile

[+] Building 995.2s (15/15) FINISHED                                            
 => [internal] load .dockerignore                                          1.8s
 => => transferring context: 52B                                           0.3s
 => [internal] load build definition from Dockerfile                       2.2s
 => => transferring dockerfile: 458B                                       0.3s
 => [internal] load metadata for docker.io/library/node:12.15.0            7.7s
 => [ 1/10] FROM docker.io/library/node:12.15.0@sha256:5dac29732723b38e  880.8s
 => => resolve docker.io/library/node:12.15.0@sha256:5dac29732723b38e1ae4  0.5s
 => => sha256:5dac29732723b38e1ae4f89391a0074ca19cd54c56f 1.21kB / 1.21kB  0.0s
 => => sha256:9f34bcc2c989e90ebb2afc5b34eaaa54c8a622ce3ba 2.21kB / 2.21kB  0.0s
 => => sha256:b6f455933a971ef6432eb203012fff15469ec69e6a6 7.76kB / 7.76kB  0.0s
 => => sha256:3192219afd04f93d90f0af7f89cb527d1af2a16 45.38MB / 45.38MB  374.1s
 => => sha256:17c160265e75550c2ed099aa7d3906b3fef0bf04 10.80MB / 10.80MB  40.7s
 => => sha256:cc4fe40d0e618e3319afb689c3570bb87e8e8cf51b 4.34MB / 4.34MB  38.5s
 => => sha256:9d647f502a07e6daaee43c23cfac9399501b1d7 50.07MB / 50.07MB  370.6s
 => => sha256:c8bd59397b26db56ddd19f152a7095a91795c 214.84MB / 214.84MB  824.9s
 => => sha256:f9289dfd19be2610a9089f4a0d45e41d858fe0ec4 4.17kB / 4.17kB  378.7s
 => => sha256:6e3bcd8fa474ab876ea0b90ae581cc9073d8e9c 23.45MB / 23.45MB  471.8s
 => => sha256:afb372a27b53c1a3d6e973bef9c120fc282ed0a57 1.40MB / 1.40MB  386.6s
 => => extracting sha256:3192219afd04f93d90f0af7f89cb527d1af2a16975ea391e  6.9s
 => => sha256:cdfe773c774d0fb8572c87e83b35514bd51df1e36ec9e 295B / 295B  389.1s
 => => extracting sha256:17c160265e75550c2ed099aa7d3906b3fef0bf046a2aeead  2.1s
 => => extracting sha256:cc4fe40d0e618e3319afb689c3570bb87e8e8cf51bca0803  0.5s
 => => extracting sha256:9d647f502a07e6daaee43c23cfac9399501b1d7f55fb4c60  9.4s
 => => extracting sha256:c8bd59397b26db56ddd19f152a7095a91795cf4af7f144e  36.3s
 => => extracting sha256:f9289dfd19be2610a9089f4a0d45e41d858fe0ec42a185f4  0.1s
 => => extracting sha256:6e3bcd8fa474ab876ea0b90ae581cc9073d8e9cabfd1b00a  5.6s
 => => extracting sha256:afb372a27b53c1a3d6e973bef9c120fc282ed0a571f9c68e  0.3s
 => => extracting sha256:cdfe773c774d0fb8572c87e83b35514bd51df1e36ec9e8c0  0.0s
 => [internal] load build context                                          1.8s
 => => transferring context: 4.15MB                                        1.0s
 => [ 2/10] RUN mkdir -p /usr/src/sportsstore                             15.3s
 => [ 3/10] COPY dist/SportsStore /usr/src/sportsstore/dist/SportsStore    5.1s
 => [ 4/10] COPY ssl /usr/src/sportsstore/ssl                              1.8s
 => [ 5/10] COPY authMiddleware.js /usr/src/sportsstore/                   1.7s
 => [ 6/10] COPY serverdata.json /usr/src/sportsstore/                     1.3s
 => [ 7/10] COPY server.js /usr/src/sportsstore/server.js                  1.2s
 => [ 8/10] COPY deploy-package.json /usr/src/sportsstore/package.json     2.0s
 => [ 9/10] WORKDIR /usr/src/sportsstore                                   1.3s
 => [10/10] RUN npm install                                               54.3s
 => exporting to image                                                    16.8s
 => => exporting layers                                                   16.6s
 => => writing image sha256:1b9b51f91f57d6ca24886463390fbefbb4e2c6a5c0e6b  0.1s
 => => naming to docker.io/library/sportsstore                             0.1s
oyekanmi@Oyekanmi-Oyetunji:~/Documents/Angular/ProAngular9/ngServe$ docker run -p 80:80 -p 443:443 sportsstore

HTTP Server running on port 80
HTTPS Server running on port 443
 


